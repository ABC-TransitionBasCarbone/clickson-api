generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Comments {
  id                           Int                           @id
  idEmissionSubCategorie       String?                       @map("id_emission_sub_categorie") @db.Uuid
  comment                      String
  createdAt                    DateTime                      @default(now()) @map("created_at")
  idCreatedBy                  Int?                          @map("id_created_by")
  sessionEmissionSubCategories SessionEmissionSubCategories? @relation(fields: [idEmissionSubCategorie], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("comments")
}

model EmissionCategories {
  id                        Int                         @id
  idLanguage                Int?                        @map("id_language")
  label                     String                      @db.VarChar(255)
  detail                    String                      @db.VarChar(2550)
  languages                 Languages?                  @relation(fields: [idLanguage], references: [id], onDelete: NoAction, onUpdate: NoAction)
  emissionSubCategories     EmissionSubCategories[]
  sessionEmissionCategories SessionEmissionCategories[]

  @@map("emission_categories")
}

model EmissionFactors {
  id                     Int                    @id
  idEmissionSubCategorie Int?                   @map("id_emission_sub_categorie")
  idLanguage             Int?                   @map("id_language")
  label                  String                 @db.VarChar(255)
  idType                 Int?                   @map("id_type")
  idUnit                 Int?                   @map("id_unit")
  value                  Decimal?               @db.Decimal
  uncertainty            Decimal?               @db.Decimal
  emissionSubCategories  EmissionSubCategories? @relation(fields: [idEmissionSubCategorie], references: [id], onDelete: NoAction, onUpdate: NoAction)
  languages              Languages?             @relation(fields: [idLanguage], references: [id], onDelete: NoAction, onUpdate: NoAction)
  emissionTypes          EmissionTypes?         @relation(fields: [idType], references: [id], onDelete: NoAction, onUpdate: NoAction)
  emissionUnits          EmissionUnits?         @relation(fields: [idUnit], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sessionEmissions       SessionEmissions[]

  @@map("emission_factors")
}

model EmissionSubCategories {
  id                           Int                            @id
  idEmissionCategorie          Int?                           @map("id_emission_categorie")
  idLanguage                   Int?                           @map("id_language")
  label                        String                         @db.VarChar(255)
  detail                       String                         @db.VarChar(2550)
  emissionFactors              EmissionFactors[]
  emissionCategories           EmissionCategories?            @relation(fields: [idEmissionCategorie], references: [id], onDelete: NoAction, onUpdate: NoAction)
  languages                    Languages?                     @relation(fields: [idLanguage], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sessionEmissionSubCategories SessionEmissionSubCategories[]

  @@map("emission_sub_categories")
}

model EmissionTypes {
  id              Int               @id
  idLanguage      Int?              @map("id_language")
  label           String            @db.VarChar(255)
  emissionFactors EmissionFactors[]
  languages       Languages?        @relation(fields: [idLanguage], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("emission_types")
}

model EmissionUnits {
  id              Int               @id
  idLanguage      Int?              @map("id_language")
  label           String            @db.VarChar(255)
  emissionFactors EmissionFactors[]
  languages       Languages?        @relation(fields: [idLanguage], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("emission_units")
}

model Groups {
  id               String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  idSchool         String?          @map("id_school") @db.Uuid
  idSessionStudent String?          @map("id_session_student") @db.Uuid
  teacherUsername  String           @map("teacher_username") @db.VarChar(255)
  name             String           @db.VarChar(255)
  year             Int?             @default(dbgenerated("date_part('year'::text, CURRENT_DATE)"))
  archived         Boolean?         @default(false)
  deleted          Boolean?         @default(false)
  createdAt        DateTime         @default(now()) @map("created_at")
  updatedAt        DateTime         @default(now()) @map("updated_at")
  schools          Schools?         @relation(fields: [idSchool], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sessionStudent   SessionStudents? @relation(fields: [idSessionStudent], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("groups")
}

model Languages {
  id                    Int                     @id
  languageCode          String                  @map("language_code") @db.Char(2)
  flagUrl               String                  @map("flag_url") @db.VarChar(255)
  emissionCategories    EmissionCategories[]
  emissionFactors       EmissionFactors[]
  emissionSubCategories EmissionSubCategories[]
  emissionTypes         EmissionTypes[]
  emissionUnits         EmissionUnits[]

  @@map("languages")
}

model SchoolAdmins {
  schoolId      String   @map("school_id") @db.Uuid
  adminUsername String   @map("admin_username")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")
  schools Schools @relation(fields: [schoolId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([schoolId, adminUsername])
  @@map("school_admins")
}

model Schools {
  id                String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  state             String
  name              String
  townName          String            @map("town_name")
  postalCode        String            @map("postal_code")
  studentCount      Int?              @map("student_count")
  staffCount        Int?              @map("staff_count")
  establishmentYear Int?              @map("establishment_year")
  adress            String?
  adminUsername     String?           @map("admin_username")
  createdAt         DateTime          @default(now()) @map("created_at")
  updatedAt         DateTime          @default(now()) @map("updated_at")
  groups            Groups[]
  schoolAdmins      SchoolAdmins[]
  sessionStudents   SessionStudents[]

  @@map("schools")
}

model SessionEmissionCategories {
  id                           String                         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  idSessionStudent             String?                        @map("id_session_student") @db.Uuid
  idEmissionCategorie          Int?                           @map("id_emission_categorie")
  emissionCategories           EmissionCategories?            @relation(fields: [idEmissionCategorie], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sessionEmissionSubCategories SessionEmissionSubCategories[]
  createdAt                    DateTime                       @default(now()) @map("created_at")
  updatedAt                    DateTime                       @default(now()) @map("updated_at")

  @@map("session_emission_categories")
}

model SessionEmissionSubCategories {
  id                         String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  idSessionEmissionCategorie String?                    @map("id_session_emission_categorie") @db.Uuid
  idEmissionSubCategorie     Int?                       @map("id_emission_sub_categorie")
  comments                   Comments[]
  sessionEmissionCategories  SessionEmissionCategories? @relation(fields: [idSessionEmissionCategorie], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "session_emission_sub_categori_id_session_emission_categori_fkey")
  emissionSubCategories      EmissionSubCategories?     @relation(fields: [idEmissionSubCategorie], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sessionEmissions           SessionEmissions[]
  createdAt                  DateTime                   @default(now()) @map("created_at")
  updatedAt                  DateTime                   @default(now()) @map("updated_at")

  @@map("session_emission_sub_categories")
}

model SessionEmissions {
  id                            String                        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  idSessionEmissionSubCategorie String?                       @map("id_session_emission_sub_categorie") @db.Uuid
  idEmissionFactor              Int?                          @map("id_emission_factor")
  value                         Decimal?                      @db.Decimal
  createdAt                     DateTime                      @default(now()) @map("created_at")
  updatedAt                     DateTime                      @default(now()) @map("updated_at")
  emissionFactors               EmissionFactors?              @relation(fields: [idEmissionFactor], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sessionEmissionSubCategories  SessionEmissionSubCategories? @relation(fields: [idSessionEmissionSubCategorie], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("session_emissions")
}

model SessionStudents {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  idSchool  String?  @map("id_school") @db.Uuid
  name      String   @db.VarChar(255)
  year      Int?     @default(dbgenerated("date_part('year'::text, CURRENT_DATE)"))
  progress  Int?     @default(0)
  archived  Boolean? @default(false)
  deleted   Boolean? @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  schools   Schools? @relation(fields: [idSchool], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Groups    Groups[]

  @@map("session_students")
}
