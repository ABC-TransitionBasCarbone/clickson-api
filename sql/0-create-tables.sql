DROP TABLE IF EXISTS SESSION_EMISSIONS;
DROP TABLE IF EXISTS COMMENTS;
DROP TABLE IF EXISTS EMISSION_FACTORS;
DROP TABLE IF EXISTS EMISSION_SUB_CATEGORIES;
DROP TABLE IF EXISTS SESSION_EMISSION_CATEGORIES;
DROP TABLE IF EXISTS EMISSION_CATEGORIES;
DROP TABLE IF EXISTS SESSION_STUDENTS;
DROP TABLE IF EXISTS GROUPS;
DROP TABLE IF EXISTS SCHOOLS;
DROP TABLE IF EXISTS EMISSION_UNITS;
DROP TABLE IF EXISTS EMISSION_TYPES;
DROP TABLE IF EXISTS LANGUAGES;

CREATE TABLE LANGUAGES (
    id INT PRIMARY KEY,
    language_code CHAR(2) NOT NULL
    flag_url VARCHAR(255) NOT NULL
);
CREATE TABLE EMISSION_TYPES (
    id INT PRIMARY KEY,
    id_language INT REFERENCES LANGUAGES(id),
    label VARCHAR(255) NOT NULL
);
CREATE TABLE EMISSION_UNITS (
    id INT PRIMARY KEY,
    id_language INT REFERENCES LANGUAGES(id),
    label VARCHAR(255) NOT NULL
);
-- TODO add multiples admin into Schools
CREATE TABLE SCHOOLS (
    id UUID DEFAULT gen_random_uuid()  PRIMARY KEY,
    state TEXT NOT NULL,
    name TEXT NOT NULL,
    town_name TEXT NOT NULL,
    postal_code TEXT NOT NULL,
    student_count INTEGER,
    staff_count INTEGER,
    establishment_year INTEGER,
    adress TEXT
);
CREATE TABLE SCHOOL_ADMINS (
    school_id UUID REFERENCES SCHOOLS(id),
    admin_username TEXT NOT NULL,
    PRIMARY KEY (school_id, admin_username)
);
CREATE TABLE SESSION_STUDENTS (
    id UUID DEFAULT gen_random_uuid()  PRIMARY KEY,
    id_school UUID REFERENCES SCHOOLS(id),
    name VARCHAR(255) NOT NULL,
    year INT DEFAULT (DATE_PART('year'::text, CURRENT_DATE)),
    progress INT DEFAULT 0,
    archived BOOLEAN DEFAULT false,
    deleted BOOLEAN DEFAULT false
);
CREATE TABLE GROUPS (
    id UUID DEFAULT gen_random_uuid()  PRIMARY KEY,
    id_session UUID REFERENCES SESSION_STUDENTS(id),
    name VARCHAR(255) NOT NULL,
    year INT DEFAULT (DATE_PART('year'::text, CURRENT_DATE)),
    archived BOOLEAN DEFAULT false,
    deleted BOOLEAN DEFAULT false
);
CREATE TABLE EMISSION_CATEGORIES (
    id INT PRIMARY KEY,
    id_language INT REFERENCES LANGUAGES(id),
    label VARCHAR(255) NOT NULL,
    detail VARCHAR(2550) NOT NULL
);
CREATE TABLE SESSION_EMISSION_CATEGORIES (
    id UUID DEFAULT gen_random_uuid()  PRIMARY KEY,
    id_session_student UUID REFERENCES SESSION_STUDENTS(id),
    id_emission_categorie INT REFERENCES EMISSION_CATEGORIES(id)
);
CREATE TABLE EMISSION_SUB_CATEGORIES (
    id INT PRIMARY KEY,
    id_emission_categorie INT REFERENCES EMISSION_CATEGORIES(id),
    id_language INT REFERENCES LANGUAGES(id),
    label VARCHAR(255) NOT NULL,
    detail VARCHAR(2550) NOT NULL
);
CREATE TABLE SESSION_EMISSION_SUB_CATEGORIES (
    id UUID DEFAULT gen_random_uuid()  PRIMARY KEY,
    id_session_emission_categorie UUID REFERENCES SESSION_EMISSION_CATEGORIES(id),
    id_emission_sub_categorie INT REFERENCES EMISSION_SUB_CATEGORIES(id)
);
CREATE TABLE EMISSION_FACTORS (
    id INT PRIMARY KEY,
    id_emission_sub_categorie INT REFERENCES EMISSION_SUB_CATEGORIES(id),
    id_language INT REFERENCES LANGUAGES(id),
    label VARCHAR(255) NOT NULL,
    id_type INT REFERENCES EMISSION_TYPES(id),
    id_unit INT REFERENCES EMISSION_UNITS(id),
    value NUMERIC,
    uncertainty NUMERIC
);
CREATE TABLE COMMENTS (
    id INT PRIMARY KEY,
    id_emission_sub_categorie UUID REFERENCES SESSION_EMISSION_SUB_CATEGORIES(id),
    comment TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_created_by INT
);
CREATE TABLE SESSION_EMISSIONS (
    id UUID DEFAULT gen_random_uuid()  PRIMARY KEY,
    id_session_emission_sub_categorie UUID REFERENCES SESSION_EMISSION_SUB_CATEGORIES(id),
    id_emission_factor INT REFERENCES EMISSION_FACTORS(id),
    value NUMERIC
);
